<?php/** * Created by PhpStorm. * User: yanglei * Date: 15/11/2 * Time: 下午5:17 */namespace App\Http\Manage;use App\Http\Model\liuchengdan\AuthorityListModel;use App\Http\Model\liuchengdan\GroupModel;use App\Http\Model\liuchengdan\UserModel;class AdminAuthorityManage{    private $authorityListModel = null;    public function __construct()    {        $this->authorityListModel = new AuthorityListModel();    }    /**     * 获取后台完整权限列表     * @return array    ['menu'=>array, 'op'=>array], menu是功能列表(类文件), op是操作(类中的方法)     */    public function getList($id = '')    {        if (empty($id)) {            $data = $this->authorityListModel->get_all()->toArray();        } else {            $data = $this->authorityListModel->get_list($id)->toArray();        }        $result = [];        foreach ($data as $value) {            unset($value['created_at']);            unset($value['updated_at']);            unset($value['state']);            if (0 == $value['masterid']) {                if (0 == $value['parentid']) {                    $result[$value['id']] = $value;                } else {                    $result[$value['parentid']]['master'][$value['id']] = $value;                }            } else {                $result[$value['parentid']]['master'][$value['masterid']]['sub'][$value['id']] = $value;            }        }        return $result;    }    public function getAuthorityByController($controller, $method='')    {        return $this->authorityListModel->getByController($controller, $method);    }    /**     * 创建权限列表     * @param array $list     * @throws \Exception     */    public function createAuthorityList(Array $list)    {        $this->authorityListModel->stopAuthority();        try{            $parent = $this->authorityListModel->createParentAuthority($list['parent']);        } catch (\Exception $e) {            throw new \Exception('createParentAuthority: ' . $e->getMessage() . ' (' . $e->getLine() . ')');        }        try {            $master = $this->authorityListModel->createMasterAuthority($list['master'], $parent);        } catch (\Exception $e) {            throw new \Exception('createMasterAuthority: ' . $e->getMessage() . ' (' . $e->getLine() . ')');        }        try {            $this->authorityListModel->createSubAuthority($list['sub'], $parent, $master);        } catch (\Exception $e) {            throw new \Exception('createSubAuthority: ' . $e->getMessage() . ' (' . $e->getLine() . ')');        }        return;    }    public function modifyAuthority(Array $request)    {        if (isset($request['select_all']) && !empty($request['select_all'])) {            $request['authority'] = 'all';        }        if (isset($request['authority']) && !empty($request['authority'])) {            switch ($request['usertype']) {                case 'user':                    $this->modifyUserAuthority($request);                    break;                case 'group':                    $this->modifyGroupAuthority($request);                    break;                default:                    throw new \Exception('usertype error');                    break;            }        } else {            throw new \Exception('没有给【' + $request['username'] + '】设置开通的权限');        }        return;    }    private function modifyUserAuthority(Array $request)    {        $model = new UserModel();        $uid = $request['userid'];        unset($request['userid']);        unset($request['usertype']);        unset($request['username']);        unset($request['select_all']);        $model->modify($uid, $request);    }    private function modifyGroupAuthority(Array $request)    {        $model = new UserGroupModel();        $gid = $request['userid'];        unset($request['userid']);        unset($request['usertype']);        unset($request['username']);        unset($request['select_all']);        $model->modify($gid, $request);    }}